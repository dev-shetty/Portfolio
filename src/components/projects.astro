---
import Button from "@/components/ui/button"
import H2 from "@/components/ui/typography/H2.astro"
import H3 from "@/components/ui/typography/H3.astro"
import { icons } from "@/lib/icons"
import { projects } from "@/lib/projects"
import Image from "astro/components/Image.astro"
import { Icon } from "astro-icon/components"

const INITIAL_LIMIT = 3
---

<section class="my-16">
  <H2>Projects</H2>
  <div class="grid gap-6">
    {
      projects.map((project, index) => (
        <div
          class:list={[
            "flex flex-col-reverse lg:grid lg:grid-cols-4 items-center pb-2 border-b last-of-type:border-b-0 last-of-type:pb-0 border-b-slate-800",
            { hidden: index >= INITIAL_LIMIT },
          ]}
          data-project
        >
          <div class="flex flex-col gap-4 col-span-3 mt-4 lg:mt-0 lg:pr-8">
            <div class="flex flex-col gap-1">
              <H3>{project.name}</H3>
              <p>{project.description}</p>
            </div>
            <div class="flex flex-wrap gap-2">
              {project.labels.map((label) => (
                <p class="outline px-2 py-1 rounded-md bg-slate-800 hover:bg-slate-700 cursor-pointer transition-colors">
                  {label}
                </p>
              ))}
            </div>
            <div class="mt-2 lg:mt-0 flex justify-between">
              <p class="text-slate-300">{project.date}</p>
              <div class="flex gap-2 text-xl">
                <a href={project.sourceCode} target="_blank">
                  <Icon name={icons.SourceCode} />
                </a>
                {project.liveUrl && (
                  <a href={project.liveUrl} target="_blank">
                    <Icon name={icons.Visit} />
                  </a>
                )}
              </div>
            </div>
          </div>
          <a
            href={project.liveUrl ?? project.sourceCode}
            class="relative w-full aspect-video lg:border-2 border-slate-700 rounded-xl"
          >
            <Image
              src={project.image}
              alt={project.name}
              class="block rounded-xl lg:p-1"
              sizes="100%"
              fit="cover"
              width={1000}
              height={1000}
              inferSize
            />
          </a>
        </div>
      ))
    }
    <Button
      client:load
      className="mx-auto py-2 w-fit md:w-fit px-16 cursor-pointer"
      id="toggleProjects"
    >
      View More
    </Button>
  </div>
</section>
<script>
  const toggleButton = document.getElementById("toggleProjects")
  const projects = document.querySelectorAll("[data-project]")
  const INITIAL_LIMIT = 3
  let isExpanded = false

  toggleButton?.addEventListener("click", () => {
    isExpanded = !isExpanded

    projects.forEach((project, index) => {
      if (index >= INITIAL_LIMIT) {
        project.classList.toggle("hidden")
      }
    })

    if (toggleButton) {
      toggleButton.textContent = isExpanded ? "View Less" : "View More"
    }
  })
</script>
